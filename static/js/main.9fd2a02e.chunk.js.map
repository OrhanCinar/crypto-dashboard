{"version":3,"sources":["components/Coincard.jsx","components/CoinContainer.jsx","actions/index.jsx","components/RestApi.jsx","components/MyCandleStickChart.jsx","App.jsx","reducers/coinReducer.jsx","index.jsx"],"names":["CoinCard","_ref","coin","react_default","a","createElement","ListGroupItem","key","id","color","priceChange","className","price","connect","state","props","coinList","coinReducer","Container","Row","ListGroup","map","Coincard","UPDATE_COIN","UPDATE_K_LINE","arrCoin","BinanceSocket","console","log","dispatch","endPoints","endPoint","item","concat","getCoinEndPoints","ws","WebSocket","onopen","onclose","onerror","event","onmessage","e","data","JSON","parse","Array","isArray","s","c","coinAction","type","payload","i","length","symbol","includes","parseMiniTicker","klineData","closePrice","openPrice","o","symbolName","kline","parseKLine","GET_BASE_URL","timeParse","GetKLine","fetch","then","res","json","parsedData","p","openTime","Date","open","high","low","close","volume","closeTime","push","candleStickData","catch","err","CandleStickChart","this","calculatedData","xAccessor","d","xExtents","last","Math","max","ema20","ema","options","windowSize","sourcePath","skipUndefined","merge","accessor","stroke","react_stockcharts_es","height","ratio","width","margin","left","right","top","bottom","seriesName","xScale","scaleTime","yExtents","padding","axes","axisAt","orient","ticks","series","timeIntervalBarWidth","utcHour","coordinates","at","displayFormat","timeFormat","format","yAccessor","fill","tooltip","origin","onClick","echo","w","h","tickFormat","React","Component","App","onWebSocketStart","onKLineAPI","Fragment","fluid","Col","xs","CoinContainer","MyCandleStickChart","mapDispatchToProps","lineChartData","initialState","arguments","undefined","Object","objectSpread","oldBtcDataSet","datasets","newBtcDataSet","parseFloat","newChartData","labels","round","getTime","_payload$coin","find","toConsumableArray","coinExists","rootReducers","combineReducers","allStoreEnhancers","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","label","borderColor","backgroundColor","pointBorderColor","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","borderWidth","lineTension","showLine","animation","duration","lineChartOptions","responsive","maintainAspectRatio","tooltips","enabled","scales","xAxes","autoSkip","maxTicksLimit","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.9fd2a02e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ListGroupItem } from \"reactstrap\";\r\n\r\nfunction CoinCard({ coin }) {\r\n  return (\r\n    <ListGroupItem\r\n      key={coin.id}\r\n      color={coin.priceChange === \"up\" ? \"success\" : \"danger\"}\r\n      className=\"left\"\r\n    >\r\n      {coin.id}/{coin.price}\r\n    </ListGroupItem>\r\n  );\r\n}\r\n\r\nexport default CoinCard;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CoinCard from \"./Coincard\";\r\nimport { Container, Row, ListGroup } from \"reactstrap\";\r\n\r\nconst CoinList = state => {\r\n  //console.log(state);\r\n  return (\r\n    <Container>\r\n      {/* {\r\n        <Row>\r\n          <h2>Count : {state.coinList.length}</h2>\r\n        </Row>\r\n      } */}\r\n\r\n      {\r\n        <Row>\r\n          <ListGroup>\r\n            {state.coinList.map(coin => {\r\n              return <CoinCard coin={coin} key={coin.id} />;\r\n            })}\r\n          </ListGroup>\r\n        </Row>\r\n      }\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  //console.log(state);\r\n  return {\r\n    coinList: state.coinReducer.coinList\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(CoinList);\r\n","//Action Types\r\nexport const UPDATE_COIN = \"UPDATE_COIN\";\r\nexport const ADD_COIN = \"ADD_COIN\";\r\nexport const UPDATE_K_LINE = \"UPDATE_K_LINE\";\r\nexport const ADD_K_LINE = \"ADD_K_LINE\";\r\n\r\nconst BinanceSocket = state => {\r\n  //  const ALL_MARKET_TICKER = \"!miniTicker@arr\";\r\n  const SYMBOL_TICKER = \"btcusdt@miniTicker\";\r\n  //const KLINE = \"btcusdt@kline_1m\";\r\n\r\n  console.log(\"binance socket \", state);\r\n\r\n  return dispatch => {\r\n    const endPoints = getCoinEndPoints();\r\n    console.log(endPoints);\r\n    const ws = new WebSocket(`wss://stream.binance.com:9443/ws/${endPoints}`);\r\n\r\n    ws.onopen = () => {\r\n      console.log(\"opening\");\r\n    };\r\n\r\n    ws.onclose = () => {\r\n      console.log(\"closing\");\r\n    };\r\n\r\n    ws.onerror = event => {\r\n      console.log(`Error : ${event}`);\r\n    };\r\n\r\n    ws.onmessage = e => {\r\n      const data = JSON.parse(e.data);\r\n\r\n      switch (data.e) {\r\n        case \"24hrMiniTicker\":\r\n          dispatch(parseMiniTicker(data));\r\n          break;\r\n        case \"kline\":\r\n          dispatch(parseKLine(data));\r\n          break;\r\n        default:\r\n      }\r\n    };\r\n  };\r\n};\r\n\r\nconst arrCoin = [\r\n  \"btcusdt\",\r\n  \"ethbtc\",\r\n  \"xlmbtc\",\r\n  \"adabtc\",\r\n  \"bnbbtc\",\r\n  \"tusdbtc\",\r\n  \"ethtusd\"\r\n];\r\n\r\nfunction getCoinEndPoints() {\r\n  let endPoint = \"\";\r\n\r\n  for (var item in arrCoin) {\r\n    endPoint += `${arrCoin[item]}@miniTicker/`;\r\n  }\r\n\r\n  return endPoint;\r\n}\r\n\r\nfunction parseMiniTicker(data) {\r\n  //multiple coins\r\n  if (Array.isArray(data)) {\r\n    for (let i = 0; i < data.length; i++) {\r\n      const symbol = data[i];\r\n      if (!symbol || !symbol.s.includes(\"BTC\")) {\r\n        continue; // using only BTC Market\r\n      }\r\n      //console.log(symbol);\r\n\r\n      const id = symbol.s;\r\n      const price = symbol.c;\r\n\r\n      const coinAction = {\r\n        type: UPDATE_COIN,\r\n        payload: {\r\n          coin: { id, price }\r\n        }\r\n      };\r\n      return coinAction;\r\n    }\r\n  }\r\n  //single coin\r\n  else {\r\n    const id = data.s;\r\n    const price = data.c;\r\n\r\n    const coinAction = {\r\n      type: UPDATE_COIN,\r\n      payload: {\r\n        coin: { id, price }\r\n      }\r\n    };\r\n    return coinAction;\r\n  }\r\n}\r\n\r\nfunction parseKLine(data) {\r\n  //console.log(data);\r\n  const klineData = {\r\n    closePrice: data.c,\r\n    openPrice: data.o,\r\n    symbolName: data.s\r\n  };\r\n  const klineAction = {\r\n    type: UPDATE_K_LINE,\r\n    payload: {\r\n      kline: { id: data.s, price: klineData }\r\n    }\r\n  };\r\n\r\n  return klineAction;\r\n}\r\n\r\n// const mapStateToProps = (state, props) => {\r\n//   //console.log(state);\r\n//   return {\r\n//     coinList: state.coinReducer.coinList\r\n//   };\r\n// };\r\nexport default BinanceSocket;\r\n","import { timeParse } from \"d3-time-format\";\r\nimport { ADD_K_LINE } from \"../actions\";\r\n\r\nconst BASE_URL = \"https://api.binance.com\";\r\nconst API_VERSION_URL = \"/api/v1/\";\r\nconst EXCHANGE_URL = \"/exchangeInfo\";\r\nconst DAILY_TICKER_URL = \"/ticker/24hr\";\r\nconst KLINE_URL = \"/klines\";\r\n\r\nconst GET_BASE_URL = `${BASE_URL}${API_VERSION_URL}/`;\r\n\r\nexport function getDailyTicker() {\r\n  fetch(`${GET_BASE_URL}/${DAILY_TICKER_URL}`)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      console.log(res);\r\n    })\r\n    .catch(err => {\r\n      console.log(\"getDailyTicker err > \", err);\r\n    });\r\n}\r\n\r\nexport function getExchangeInfo() {\r\n  fetch(`${GET_BASE_URL}/${EXCHANGE_URL}`)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      console.log(res);\r\n    })\r\n    .catch(err => {\r\n      console.log(\"getExchangeInfo err > \", err);\r\n    });\r\n}\r\n\r\nconst GetKLine = state => {\r\n  return dispatch => {\r\n    fetch(`${GET_BASE_URL}/${KLINE_URL}?symbol=BTCUSDT&interval=1h&limit=500`)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        //console.log(\"getKLine > res > \", res);\r\n        var parsedData = [];\r\n\r\n        for (var i = 0; i < res.length; i++) {\r\n          var p = parseKLine(res[i]);\r\n          parsedData.push(p);\r\n        }\r\n        //parsedData = parsedData.reverse();\r\n        const klineAction = {\r\n          type: ADD_K_LINE,\r\n          payload: {\r\n            candleStickData: parsedData\r\n          }\r\n        };\r\n\r\n        dispatch(klineAction);\r\n\r\n        console.log(\"parsedData\", parsedData.length);\r\n      })\r\n      .catch(err => {\r\n        console.log(\"getKLine err > \", err);\r\n      });\r\n  };\r\n};\r\n\r\nconst parseDate = timeParse(\"%Y-%m-%d\");\r\n\r\nfunction parseKLine(data) {\r\n  var d = {\r\n    openTime: new Date(data[0]), // unix milisecond\r\n    open: data[1],\r\n    high: data[2],\r\n    low: data[3],\r\n    close: data[4],\r\n    volume: data[5],\r\n    closeTime: new Date(data[6]) // unix milisecond,\r\n  };\r\n  return d;\r\n}\r\n\r\n/*\r\n[\r\n  [\r\n    1499040000000,      // Open time 0 \r\n    \"0.01634790\",       // Open 1\r\n    \"0.80000000\",       // High 2\r\n    \"0.01575800\",       // Low 3\r\n    \"0.01577100\",       // Close 4\r\n    \"148976.11427815\",  // Volume 5\r\n    1499644799999,      // Close time 6\r\n  ]\r\n]\r\n*/\r\n\r\nexport default GetKLine;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { last, timeIntervalBarWidth } from \"react-stockcharts/lib/utils\";\r\n\r\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\r\nimport { utcHour } from \"d3-time\";\r\nimport { scaleTime } from \"d3-scale\";\r\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\r\n\r\nimport {\r\n  CrossHairCursor,\r\n  MouseCoordinateX,\r\n  MouseCoordinateY,\r\n  CurrentCoordinate\r\n} from \"react-stockcharts/lib/coordinates\";\r\n\r\nimport {\r\n  BarSeries,\r\n  AreaSeries,\r\n  CandlestickSeries,\r\n  LineSeries\r\n} from \"react-stockcharts/lib/series\";\r\n\r\nimport {\r\n  OHLCTooltip,\r\n  MovingAverageTooltip\r\n} from \"react-stockcharts/lib/tooltip\";\r\nimport { ema, wma, sma, tma } from \"react-stockcharts/lib/indicator\";\r\n\r\nimport { format } from \"d3-format\";\r\nimport { timeFormat } from \"d3-time-format\";\r\n\r\nclass CandleStickChart extends React.Component {\r\n  componentDidMount() {}\r\n\r\n  // myLoop = data => {\r\n  //   let myString = \"\";\r\n\r\n  //   // for (let i = 0; i < 5; i++) {\r\n  //   //   const { open } = data[i];\r\n  //   //   // console.log(open);\r\n  //   //   myString += open + \" \";\r\n  //   // }\r\n\r\n  //   //console.log(\"myString\", myString);\r\n  //   return myString;\r\n  // };\r\n\r\n  render() {\r\n    //console.log(\"props\", this.props);\r\n\r\n    if (\r\n      this.props.candleStickData === null ||\r\n      this.props.candleStickData.length === 0\r\n    ) {\r\n      return <div>Loading...</div>;\r\n    }\r\n\r\n    const calculatedData = this.props.candleStickData;\r\n\r\n    const xAccessor = d => d.openTime;\r\n    const xExtents = [\r\n      xAccessor(last(calculatedData)),\r\n      xAccessor(calculatedData[Math.max(0, calculatedData.length - 500)])\r\n    ];\r\n\r\n    const width = 1600;\r\n    const ratio = 1;\r\n    const type = \"hybrid\";\r\n\r\n    //console.log(\"xExtents\", xExtents);\r\n\r\n    const ema20 = ema()\r\n      .options({\r\n        windowSize: 20, // optional will default to 10\r\n        sourcePath: \"close\" // optional will default to close as the source\r\n      })\r\n      .skipUndefined(true) // defaults to true\r\n      .merge((d, c) => {\r\n        d.ema20 = c;\r\n      }) // Required, if not provided, log a error\r\n      .accessor(d => d.ema20) // Required, if not provided, log an error during calculation\r\n      .stroke(\"blue\"); // Optional\r\n\r\n    return (\r\n      <ChartCanvas\r\n        height={800}\r\n        ratio={ratio}\r\n        width={width}\r\n        margin={{ left: 120, right: 10, top: 10, bottom: 30 }}\r\n        type={type}\r\n        seriesName=\"BTC\"\r\n        data={calculatedData}\r\n        xAccessor={xAccessor}\r\n        xScale={scaleTime()}\r\n        xExtents={xExtents}\r\n      >\r\n        <Chart\r\n          id={1}\r\n          yExtents={d => [d.high, d.low]}\r\n          padding={{ top: 10, bottom: 20 }}\r\n        >\r\n          <XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6} />\r\n          <YAxis axisAt=\"left\" orient=\"left\" ticks={5} />\r\n          <CandlestickSeries width={timeIntervalBarWidth(utcHour)} />\r\n\r\n          <MouseCoordinateX\r\n            at=\"bottom\"\r\n            orient=\"bottom\"\r\n            displayFormat={timeFormat(\"%Y-%m-%d %H:%M\")}\r\n          />\r\n          <MouseCoordinateY\r\n            at=\"left\"\r\n            orient=\"left\"\r\n            displayFormat={format(\".4s\")}\r\n          />\r\n          <LineSeries yAccessor={ema20.accessor()} stroke={ema20.stroke()} />\r\n          <CurrentCoordinate\r\n            yAccessor={ema20.accessor()}\r\n            fill={ema20.stroke()}\r\n          />\r\n          <OHLCTooltip origin={[-40, 0]} />\r\n          <MovingAverageTooltip\r\n            onClick={e => console.log(e)}\r\n            origin={[-38, 15]}\r\n            options={[\r\n              {\r\n                yAccessor: ema20.accessor(),\r\n                type: \"EMA20\",\r\n                stroke: ema20.stroke(),\r\n                windowSize: ema20.options().windowSize,\r\n                echo: \"\"\r\n              }\r\n            ]}\r\n          />\r\n        </Chart>\r\n\r\n        <Chart\r\n          id={2}\r\n          height={150}\r\n          yExtents={d => d.volume}\r\n          origin={(w, h) => [0, h - 150]}\r\n        >\r\n          <YAxis\r\n            axisAt=\"left\"\r\n            orient=\"left\"\r\n            ticks={5}\r\n            tickFormat={format(\".0s\")}\r\n          />\r\n          >\r\n          <BarSeries\r\n            yAccessor={d => d.volume}\r\n            fill={d => (d.close > d.open ? \"#6BA583\" : \"#FF0000\")}\r\n          />\r\n        </Chart>\r\n      </ChartCanvas>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    candleStickData: state.coinReducer.candleStickData\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CandleStickChart);\r\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { connect } from \"react-redux\";\n\nimport CoinContainer from \"./components/CoinContainer\";\n\nimport BinanceSocket from \"./actions\";\n\nimport \"./App.css\";\nimport GetKLine, {\n  getDailyTicker,\n  getExchangeInfo\n} from \"./components/RestApi\";\n\nimport MyCandleStickChart from \"./components/MyCandleStickChart\";\n\nclass App extends Component {\n  componentDidMount() {\n    // console.log('App' , this.props);\n    this.props.onWebSocketStart();\n    //getDailyTicker();\n    //getExchangeInfo();\n    this.props.onKLineAPI();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {\n          <React.Fragment>\n            <Container fluid={true}>\n              <Row>\n                <Col xs=\"1\">\n                  <CoinContainer />\n                </Col>\n\n                <Col xs=\"11\">\n                  <MyCandleStickChart />\n                </Col>\n              </Row>\n            </Container>\n            {/* <CoinCard coins={this.state.coins} />  */}\n\n            {/* {this.props.candleStickData &&\n              this.props.candleStickData.length > 0 && <CandleStickCart />} */}\n            {/* <CandleStickCart /> */}\n          </React.Fragment>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  //console.log('mapStateToProps',state);\n  return {\n    coinList: state.coinList,\n    lineChartData: state.lineChartData,\n    candleStickData: state.candleStickData\n  };\n};\n\nconst mapDispatchToProps = {\n  onWebSocketStart: BinanceSocket,\n  onKLineAPI: GetKLine\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import { UPDATE_COIN, UPDATE_K_LINE, ADD_K_LINE } from \"../actions\";\r\n\r\nconst initialState = {\r\n  coinList: []\r\n};\r\n\r\nconst coinReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    // case ADD_COIN:\r\n    //   console.log(payload.coin);\r\n    //   return {\r\n    //     ...state,\r\n    //     coinList: [...state.coinList, payload.coin],\r\n    //     action: type\r\n    //   };\r\n    case ADD_K_LINE:\r\n      return {\r\n        ...state,\r\n        candleStickData: payload.candleStickData\r\n      };\r\n    case UPDATE_K_LINE:\r\n      // const { price } = payload.kline;\r\n      // console.log(payload.kline);\r\n\r\n      const oldBtcDataSet = state.lineChartData.datasets[0];\r\n      const newBtcDataSet = { ...oldBtcDataSet };\r\n      newBtcDataSet.data.push(parseFloat(payload.kline.price));\r\n\r\n      const newChartData = {\r\n        ...state.lineChartData,\r\n        datasets: [newBtcDataSet],\r\n        labels: state.lineChartData.labels.concat(\r\n          Math.round(new Date().getTime() / 1000)\r\n        )\r\n      };\r\n\r\n      //console.log('UPDATE_K_LINE', payload.kline.price);\r\n      //console.log(Math.round(new Date().getTime() / 1000));\r\n      return {\r\n        ...state,\r\n        lineChartData: { ...state.lineChartData, newChartData }\r\n      };\r\n\r\n    case UPDATE_COIN:\r\n      const { id, price } = payload.coin;\r\n\r\n      //active btc market coins\r\n      if (state.coinList.length < 135) {\r\n        let coinExists = state.coinList.find(c => c.id === id);\r\n\r\n        if (!coinExists) {\r\n          //console.log(id, 'coinExists');\r\n          return {\r\n            ...state,\r\n            coinList: [...state.coinList, payload.coin]\r\n            //action: type\r\n          };\r\n        }\r\n      }\r\n\r\n      let coinExists = state.coinList.find(c => c.id === id);\r\n\r\n      return {\r\n        ...state,\r\n        coinList: state.coinList.map(c =>\r\n          c.id === id\r\n            ? {\r\n                ...c,\r\n                price: price,\r\n                priceChange: coinExists.price > price ? \"down\" : \"up\"\r\n              }\r\n            : c\r\n        )\r\n        //action: type\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default coinReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport coinReducer from \"./reducers/coinReducer\";\n\nconst initialState = {\n  coinList: [\n    // { id: \"ETHBTC\", price: 0 },\n    // { id: \"XLMBTC\", price: 0 },\n    // { id: \"TUSDBTC\", price: 0 },\n    // { id: \"BTCUSDT\", price: 0 }\n  ],\n\n  lineChartData: {\n    labels: [],\n    datasets: [\n      {\n        type: \"line\",\n        label: \"BTCUSDT\",\n        borderColor: \"#EC932F\",\n        backgroundColor: \"#EC932F\",\n        pointBorderColor: \"#EC932F\",\n        pointBackgroundColor: \"#EC932F\",\n        pointHoverBackgroundColor: \"#EC932F\",\n        pointHoverBorderColor: \"#EC932F\",\n        fill: false,\n        borderWidth: \"2\",\n        lineTension: 0.5,\n        showLine: true,\n        data: []\n      }\n    ]\n  },\n  animation: {\n    duration: 0 // general animation time\n  },\n  lineChartOptions: {\n    responsive: true,\n    maintainAspectRatio: true,\n    tooltips: {\n      enabled: true\n    },\n    scales: {\n      xAxes: [\n        {\n          ticks: {\n            autoSkip: true,\n            maxTicksLimit: 10\n          }\n        }\n      ]\n    }\n  },\n  candleStickData: []\n};\n\nconst rootReducers = combineReducers({\n  coinReducer: coinReducer\n});\n\nexport default rootReducers;\n\nconst allStoreEnhancers = compose(\n  applyMiddleware(thunk),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconst store = createStore(\n  rootReducers,\n  {\n    coinReducer: initialState\n  },\n  allStoreEnhancers\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}